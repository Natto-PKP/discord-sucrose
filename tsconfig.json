{
  "include": ["src/**/*"],

  "compilerOptions": { 
    // # Type checking
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statement
    "noImplicitAny": true, // Disallow implicit any
    "noImplicitOverride": true, // Ensure overriding members in derived classes are marked with an override modifier
    "noImplicitReturns": true, // Report error when not all code paths in function return a value
    "noImplicitThis": true, // Raise error on 'this' expressions with an implied 'any' type
    "noPropertyAccessFromIndexSignature": true, // Enforces using indexed accessors for keys declared using an indexed type
    "noUnusedLocals": true, // Report errors on unused locals
    "noUnusedParameters": true, // Report errors on unused parameters

    // # Strict
    "strict": true, // Enable all strict type-checking options
    "useUnknownInCatchVariables": true, // Type catch clause variables as unknown instead of any

    // # Modules 
    "module": "CommonJS", // Specify module code generation: 'None', 'CommonJS', 'AMD', 'System', 'UMD', 'ES6', 'ES2015' or 'ESNext' 
    // "resolveJsonModule": true, // Include modules imported with .json extension
    "rootDir": "src", // Specify the root directory of input files   
    "declaration": true, // Generates corresponding '.d.ts' file 
    "sourceMap": true, // Generates corresponding '.map' file
    "declarationMap": true, // Generates a sourcemap for each corresponding '.d.ts' file
    "outDir": "dist", // Redirect output structure to the directory  
    "target": "ESNext", // Specify ECMAScript target version

    // # Interop Constraints
    "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file
    "esModuleInterop": true, // Emit additional JavaScript to ease support for importing CommonJS modules

    // # Language and Environment
    // "emitDecoratorMetadata": true, // Emit design-type metadata for decorated declarations in source files
    "importHelpers": true, // Import emit helpers from 'tslib'
    // "experimentalDecorators": true, // Enables experimental support for ES7 decorators
  }
}
